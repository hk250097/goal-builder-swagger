openapi: 3.0.0
info:
  title: Goal Builder API's
  description: Goal Builder API's Spec
  version: '1.0'

servers:
  - url: http://financial-wellness-{env}.financial-wellness.{env}.int.dbk.ncr.com
    description: "GB API's internal to Candescent"
    variables:
      env:
        default: dev
        enum:
          - dev
          - qal
          - pte
          - stg
          - prd

paths:
  /v1/coffee-cans:
    get:
      tags:
        - Coffee-Cans
      operationId: Get Coffee-Cans
      summary: "Get Coffee-Cans"
      description: API For getting the Coffee-Cans
      parameters:
        - $ref: "#/components/parameters/correlationId"
        - $ref: "#/components/parameters/authorization"
        - name: institutionUserId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: coffeeCanStatus
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - DEACTIVE
              - COMPLETED
              - CLOSED
              - NON_RECURRING
              - ACTIVE_COMPLETED
              - RECURRING
        - name: coffeeCanId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: accountId
          in: query
          required: true
          schema:
            type: string
        - name: coffeeCanName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CoffeeCan"
        '400':
          $ref: "#/components/responses/400-001"
        '401':
          $ref: "#/components/responses/401"
        '403':
          $ref: "#/components/responses/403"
        '500':
          $ref: "#/components/responses/500"
    post:
      tags:
        - Coffee-Cans
      operationId: Create Coffee-Cans
      summary: "Create Coffee-Cans"
      description: API For Creating the Goals
      parameters:
        - $ref: "#/components/parameters/correlationId"
        - $ref: "#/components/parameters/authorization"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoffeeCan'

      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CoffeeCan"
          headers:
            x-correlation-id:
              $ref: "#/components/headers/res-correlationId"
        '400':
          $ref: "#/components/responses/400-001"
        '401':
          $ref: "#/components/responses/401"
        '403':
          $ref: "#/components/responses/403"
        '500':
          $ref: "#/components/responses/500"
  /v1/coffee-cans/{coffeeCanId}:
    get:
      tags:
        - Coffee-Cans
      operationId: Get Coffee-Cans by ID
      summary: "Get Coffee-Cans by ID"
      description: API For getting the Coffee-Cans by ID
      parameters:
        - $ref: "#/components/parameters/correlationId"
        - $ref: "#/components/parameters/authorization"
        - name: institutionUserId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: coffeeCanStatus
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - DEACTIVE
              - COMPLETED
              - CLOSED
              - NON_RECURRING
              - ACTIVE_COMPLETED
              - RECURRING
        - name: accountId
          in: query
          required: false
          schema:
            type: string
        - name: coffeeCanName
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CoffeeCan"
        '400':
          $ref: "#/components/responses/400-001"
        '401':
          $ref: "#/components/responses/401"
        '403':
          $ref: "#/components/responses/403"
        '500':
          $ref: "#/components/responses/500"

    put:
      tags:
        - Coffee-Cans
      operationId: UpdateCoffeeCans
      summary: "Update Coffee-Cans"
      description: API For Updating the Goals
      parameters:
        - $ref: "#/components/parameters/correlationId"
        - $ref: "#/components/parameters/authorization"
        - name: accountId
          in: query
          required: false
          schema:
            type: string
        - name: notifyReserve
          in: query
          required: false
          schema:
            type: boolean
        - name: reserveLimit
          in: query
          required: false
          schema:
            type: number
            format: double
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoffeeCanUpdateRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CoffeeCan"
          headers:
            x-correlation-id:
              $ref: "#/components/headers/res-correlationId"
        '400':
          $ref: "#/components/responses/400-001"
        '401':
          $ref: "#/components/responses/401"
        '403':
          $ref: "#/components/responses/403"
        '500':
          $ref: "#/components/responses/500"

    delete:
      tags:
        - Coffee-Cans
      operationId: DeleteGoals
      summary: "Delete Goals"
      description: API For Deleting the Goals
      parameters:
        - $ref: "#/components/parameters/correlationId"
        - $ref: "#/components/parameters/authorization"
        - name: coffeeCanId
          in: path
          required: true
          schema:
            type: integer
            format: int64

      responses:
        '204':
          description: Success
          headers:
            x-correlation-id:
              $ref: "#/components/headers/res-correlationId"
        '400':
          $ref: "#/components/responses/400-001"
        '401':
          $ref: "#/components/responses/401"
        '403':
          $ref: "#/components/responses/403"
        '500':
          $ref: "#/components/responses/500"
  /v1/coffee-cans?include=account:
    get:
      tags:
        - Coffee-Cans
      operationId: getCoffeeCanListAndAccountDetails
      parameters:
        - $ref: "#/components/parameters/correlationId"
        - $ref: "#/components/parameters/authorization"
        - name: institutionUserId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: coffeeCanStatus
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - DEACTIVE
              - COMPLETED
              - CLOSED
              - NON_RECURRING
              - ACTIVE_COMPLETED
              - RECURRING
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /v1/coffee-cans/account:
    get:
      tags:
        - Coffee-Can Account Details
      summary: Returns Coffee-Can Account Details
      description: Returns Coffee-Can Account Details
      operationId: getCoffee-CanAccount
      parameters:
        - $ref: "#/components/parameters/correlationId"
        - $ref: "#/components/parameters/authorization"
        - name: institutionUserId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInformation'
        '400':
          $ref: "#/components/responses/400-001"
        '401':
          $ref: "#/components/responses/401"
        '500':
          $ref: "#/components/responses/500"
    post:
      tags:
        - Coffee-Can Account Details
      summary: Change Coffee-Can Account
      description: Change Coffee-Can Account
      operationId: updateCoffeeCanAccount
      parameters:
        - $ref: "#/components/parameters/correlationId"
        - $ref: "#/components/parameters/authorization"
        - name: accountId
          in: query
          required: true
          schema:
            type: string
        - name: newAccountId
          in: query
          required: true
          schema:
            type: string
        - name: institutionUserId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountInformation"
        '400':
          $ref: "#/components/responses/400-003"
        '401':
          $ref: "#/components/responses/401"
        '403':
          $ref: "#/components/responses/403"
        '500':
          $ref: "#/components/responses/500"
  /v1/coffee-cans/upcoming-transactions:
    get:
      tags:
        - Transactions
      summary: Get list of upcoming(pending) transactions
      description: Returns list of upcoming(pending) transactions
      operationId: getUpcomingTransactions
      parameters:
        - $ref: "#/components/parameters/correlationId"
        - $ref: "#/components/parameters/authorization"
        - name: institutionUserId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TransactionsResponse"
        '401':
          $ref: "#/components/responses/401"
        '500':
          $ref: "#/components/responses/500"

  /v1/coffee-cans/transactions:
    get:
      tags:
        - Transactions
      summary: Get list of pending and completed transactions
      description: Returns list of pending and completed transactions
      operationId: getTransactions
      parameters:
        - $ref: "#/components/parameters/correlationId"
        - $ref: "#/components/parameters/authorization"
        - name: institutionUserId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: coffeeCanIdList
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: fromDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: toDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsResponse'
        '400':
          $ref: "#/components/responses/400-002"
        '401':
          $ref: "#/components/responses/401"
        '500':
          $ref: "#/components/responses/500"

  /v1/coffee-cans/fund-types:
    get:
      tags:
        - Funds
      operationId: getFundTypes
      parameters:
        - $ref: "#/components/parameters/correlationId"
        - $ref: "#/components/parameters/authorization"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object

  /v1/coffee-cans/deposit-allocation:
    get:
      tags:
        - Deposit Allocation
      operationId: getDepositAllocationForAllCans
      parameters:
        - $ref: "#/components/parameters/correlationId"
        - $ref: "#/components/parameters/authorization"
        - name: institutionUserId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositAllocationSumResponse'

  /v1/coffee-cans/accounts:
    get:
      tags:
        - Get Eligible Core Accounts
      summary: Get Eligible Core Accounts
      description: Returns Eligible Core Accounts
      operationId: getBankAccounts
      parameters:
        - $ref: "#/components/parameters/correlationId"
        - $ref: "#/components/parameters/authorization"
        - name: listAccount
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsResponse'
        '400':
          $ref: "#/components/responses/400-001"
        '401':
          $ref: "#/components/responses/401"
        '500':
          $ref: "#/components/responses/500"

  /v1/coffee-cans/toaster-notification:
    get:
      tags:
        - Toaster Notification
      operationId: getToasterNotification
      parameters:
        - name: isRead
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToasterMessageNotification'

  /v1/coffee-cans/toaster-notification/{notificationId}:
    put:
      tags:
        - Toaster Notification
      operationId: updateToasterNotification
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToasterMessageNotification'
        required: true
      responses:
        '204':
          description: OK
        '400':
          $ref: "#/components/responses/400-004"
        '401':
          $ref: "#/components/responses/401"
        '500':
          $ref: "#/components/responses/500"

  /v1/coffee-cans/viewGLBEndUserFullList:
    post:
      tags:
        - AP-SupportDashboard-Extension
      operationId: viewGLBEndUserFullList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
  /v1/coffee-cans/findGLBEndUserStatus:
    post:
      tags:
        - AP-SupportDashboard-Extension
      operationId: findGLBEndUserStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object

# ------------------- Components ----------------

components:
  securitySchemes:
    auth:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    ToasterMessageNotification:
      type: object
      properties:
        notificationId:
          type: integer
          format: int64
        coffeeCanId:
          type: integer
          format: int64
        isRead:
          type: boolean
    CoffeeCan:
      type: object
      properties:
        coffeeCanId:
          type: integer
          format: int64
        getcIdTo:
          type: integer
          format: int64
        accountId:
          type: string
        institutionUserId:
          type: integer
          format: int64
        fundTypeId:
          type: integer
          format: int64
        coffeeCanName:
          type: string
        coffeeCanType:
          type: string
          enum:
            - PREDEFINED
            - PREDEFINED_NOT
        coffeeCanStatus:
          type: string
          enum:
            - ACTIVE
            - DEACTIVE
            - COMPLETED
            - CLOSED
            - NON_RECURRING
            - ACTIVE_COMPLETED
            - RECURRING
        targetAmount:
          type: number
          format: double
        totalSavingAmount:
          type: number
          format: double
        monthlyAmount:
          type: number
          format: double
        depositAllocation:
          type: number
          format: double
        goalStartDate:
          type: string
          format: date
        goalEndDate:
          type: string
          format: date
        recurringAction:
          type: string
          enum:
            - Create
            - Update
            - Delete
        recurringDetail:
          $ref: '#/components/schemas/RecurringDetail'
        transactionType:
          type: string
        transactionAmount:
          type: number
          format: double
        activeDeactiveAmount:
          type: number
          format: double
        transactionList:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        pendingList:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        nickName:
          type: string
        memo:
          type: string
        completionDate:
          type: string
          format: date-time
        toasterMessage:
          type: string
        iconUrl:
          type: string
        isRead:
          type: boolean
    CoffeeCanUpdateRequest:
      type: object
      properties:
        coffeeCans:
          type: array
          items:
            $ref: '#/components/schemas/CoffeeCan'
    RecurringDetail:
      type: object
      properties:
        recAmount:
          type: number
          format: double
        recStartDate:
          type: string
          format: date
        frequencyType:
          type: string
        recEndType:
          type: string
        recEndDate:
          type: string
          format: date
        numberOfTransfer:
          type: integer
          format: int32
        scheduleDetails:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleDetail'
    ScheduleDetail:
      type: object
      properties:
        recurringId:
          type: integer
          format: int64
        timeOfDay:
          type: string
          format: date-time
        interval:
          type: integer
          format: int32
        day:
          type: integer
          format: int32
    Transaction:
      type: object
      properties:
        transactionId:
          type: integer
          format: int64
        coffeeCanId:
          type: integer
          format: int64
        transactionAmount:
          type: number
          format: double
        transactionDatetime:
          type: string
          format: date-time
        transactionType:
          type: string
        transactionName:
          type: string
        totalSavingAmount:
          type: number
          format: double
        frequencyType:
          type: string
        transactionMemo:
          type: string
        canToCan:
          type: string
        transactionDescription:
          type: string
        depositAmount:
          type: number
          format: double
        accountNumber:
          type: string
        accountName:
          type: string
        coffeeCanName:
          type: string
    UserInfo:
      type: object
      properties:
        fiId:
          type: string
        userGuid:
          type: string
        userMemberId:
          type: string
    TransactionsResponse:
      type: object
      properties:
        pendingTransactionsList:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        transactionsList:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    AccountInformation:
      type: object
      properties:
        institutionUserId:
          type: integer
          format: int64
        accountBalance:
          type: number
          format: double
        remainingBalance:
          type: number
          format: double
        nickName:
          type: string
        isBalanceAdjusted:
          type: boolean
        isNotifyReserve:
          type: boolean
        reserveLimit:
          type: number
          format: double
        isIncompleteDistribution:
          type: boolean
        displayAccountNumber:
          type: string
        accountType:
          type: integer
        isAccountAvailable:
          type: boolean
    DepositAllocationSumResponse:
      type: object
      properties:
        sum:
          type: number
          format: double
        message:
          type: string
    AccountsResponse:
      type: object
      properties:
        accountId:
          type: string
        description:
          type: string
        nickName:
          type: string
        displayAccountNumber:
          type: string
        availableBalance:
          type: number
        displayCardNumber:
          type: string

    error:
      type: "object"
      properties:
        code:
          type: "string"
          description: "The error code"
          example: "GB-400-1001"
        message:
          type: "string"
          description: "The error message"
          example: "/query/goals must have required property 'accountId' "

  parameters:
    correlationId:
      name: x-correlation-id
      in: header
      example: 07ae5002-4d4d-46d9-a6c6-bee9f9b29722
      schema:
        type: string
    authorization:
      name: Authorization
      in: header
      description: Signed JWT carrying user data
      required: false
      schema:
        type: string
        default: Bearer <JWT>

  headers:
    req-correlationId:
      description: Identifier for request
      required: false
      schema:
        type: string
        format: uuid
        default: d6d6aca7-8ac6-4339-8470-f4a0acc781b3
    res-correlationId:
      description: Identifier for response
      required: false
      schema:
        type: string
        format: uuid
        default: d6d6aca7-8ac6-4339-8470-f4a0acc781b3

  responses:
    400-001:
      description: "Bad Request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
          example:
            error:
              - code: GB-400-001
                status: Bad Request
                message: Required params missing
    400-002:
      description: "Bad Request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
          example:
            error:
              - code: GB-400-002
                status: Bad Request
                message: The date range provided was invalid
    400-003:
      description: "Bad Request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
          example:
            error:
              - code: GB-400-003
                status: Bad Request
                message: Invalid Account
    400-004:
      description: "Bad Request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
          example:
            error:
              - code: GB-400-004
                status: Bad Request
                message: Invalid Notification
    401:
      description: "Invalid Session"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
          example:
            error:
              - code: GB-401-001
                status: Unauthorized
                message: Invalid Session
    403:
      description: "Invalid JWT"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
          example:
            error:
              - code: GB-403-001
                status: Forbidden
                message: Invalid JWT
    500:
      description: "Internal Server Error"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
          example:
            error:
              - code: GB-500-001
                status: Internal Server Error
                message: An unexpected error occurred. Please try again.

